version: "3.5"

networks:
  influxdb:

volumes:
  influxdb:

secrets:
  influxdb_admin_password:
    name: ${STACK_NAME:-technocore}_influxdb_admin_password
    external: true

services:
  ingress:
    networks:
      - influxdb

  influxdb:
    deploy:
      labels:
        - traefik.frontend.rule=$INFLUXDB_ROUTING_LABEL
        - traefik.frontend.priority=$INFLUXDB_ROUTING_LABEL_PRIORITY
        - traefik.port=8086
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_influxdb
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      #resources:
      #  limits:
      #    memory: 128M
      #  reservations:
      #    memory: 64M
    environment:
      - INFLUXDB_ADMIN_USER=$ADMIN_USER
      - INFLUXDB_ADMIN_PASSWORD={{"{{DOCKER-SECRET:admin_password}}"}}
      - INFLUXDB_DB=home_assistant
    image: ${image_provider:-scififarms}/technocore-influxdb:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - influxdb
    secrets:
      - source: influxdb_admin_password
        target: admin_password
    volumes:
      - influxdb:/var/lib/influxdb
      - ${DEV_MOUNT_INFLUXDB_MIGRATIONS:-$EMPTY_MOUNT}
